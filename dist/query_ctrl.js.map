{"version":3,"sources":["../src/query_ctrl.js"],"names":["QueryCtrl","GenericDatasourceQueryCtrl","$scope","$injector","uiSegmentSrv","scope","target","sql","offset","limit","project","acceptPartial","datasource","metricFindQuery","then","transformToSegments","rawQuery","panelCtrl","refresh","templateUrl"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAQA,Y,kBAAAA,S;;;;;;;;;;;;;;;;;;;;;yCAGKC,0B;;;AAEZ,wCAAYC,MAAZ,EAAoBC,SAApB,EAA+BC,YAA/B,EAA6C;AAAA;;AAAA,yJACtCF,MADsC,EAC9BC,SAD8B;;AAE5C,WAAKE,KAAL,GAAaH,MAAb;AACA,WAAKE,YAAL,GAAoBA,YAApB;AACA,WAAKE,MAAL,CAAYC,GAAZ,GAAkB,MAAKD,MAAL,CAAYC,GAAZ,IAAmB,wCAArC;AACA,WAAKD,MAAL,CAAYE,MAAZ,GAAqB,MAAKF,MAAL,CAAYE,MAAZ,IAAsB,CAA3C;AACA,WAAKF,MAAL,CAAYG,KAAZ,GAAoB,MAAKH,MAAL,CAAYG,KAAZ,IAAqB,KAAzC;AACA,WAAKH,MAAL,CAAYI,OAAZ,GAAsB,MAAKJ,MAAL,CAAYI,OAAZ,IAAuB,SAA7C;AACA,WAAKJ,MAAL,CAAYK,aAAZ,GAA4B,MAAKL,MAAL,CAAYK,aAAZ,IAA6B,IAAzD;AACA,WAAKL,MAAL,CAAYA,MAAZ,GAAqB,MAAKA,MAAL,CAAYA,MAAZ,IAAsB,wCAA3C;AAT4C;AAU5C;;;;kCAEY;AACZ;AACA,aAAO,KAAKM,UAAL,CAAgBC,eAAhB,CAAgC,KAAKP,MAArC,EACNQ,IADM,CACD,KAAKV,YAAL,CAAkBW,mBAAlB,CAAsC,KAAtC,CADC,CAAP;AAEA;AACA;;;wCAEkB;AAClB;AACA,WAAKT,MAAL,CAAYU,QAAZ,GAAuB,CAAC,KAAKV,MAAL,CAAYU,QAApC;AACA;;;wCAEkB;AAClB;AACA,WAAKC,SAAL,CAAeC,OAAf,GAFkB,CAEQ;AAC1B;;;;KA7B8ClB,S;;;;AAgChDC,8BAA2BkB,WAA3B,GAAyC,4BAAzC","file":"query_ctrl.js","sourcesContent":["import {QueryCtrl} from 'app/plugins/sdk';\nimport './css/query-editor.css!'\n\nexport class GenericDatasourceQueryCtrl extends QueryCtrl {\n\n\tconstructor($scope, $injector, uiSegmentSrv) {\n\t\tsuper($scope, $injector);\n\t\tthis.scope = $scope;\n\t\tthis.uiSegmentSrv = uiSegmentSrv;\n\t\tthis.target.sql = this.target.sql || 'please write the text of sql statement';\n\t\tthis.target.offset = this.target.offset || 0;\n\t\tthis.target.limit = this.target.limit || 50000;\n\t\tthis.target.project = this.target.project || 'DEFAULT';\n\t\tthis.target.acceptPartial = this.target.acceptPartial || true;\n\t\tthis.target.target = this.target.target || 'the name of this sql to show in legend';\n\t}\n\n\tgetOptions() {\n\t\tdebugger;\n\t\treturn this.datasource.metricFindQuery(this.target)\n\t\t.then(this.uiSegmentSrv.transformToSegments(false));\n\t\t// Options have to be transformed by uiSegmentSrv to be usable by metric-segment-model directive\n\t}\n\n\ttoggleEditorMode() {\n\t\tdebugger;\n\t\tthis.target.rawQuery = !this.target.rawQuery;\n\t}\n\n\tonChangeInternal() {\n\t\tdebugger;\n\t\tthis.panelCtrl.refresh(); // Asks the panel to refresh data.\n\t}\n}\n\nGenericDatasourceQueryCtrl.templateUrl = 'partials/query.editor.html';\n\n"]}